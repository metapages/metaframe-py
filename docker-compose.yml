version: "2.4"

services:

  server:
    image: denoland/deno:alpine-1.32.5
    command: deno run -A --watch=server/ server/server.ts
    working_dir: /app
    healthcheck:
      test: curl --fail http://localhost:3000/healthz || exit 1
      interval: 5s
      timeout: 1s
    environment:
      - "DENO_DIR=/deno"
      - "DENO_INSTALL_ROOT=/deno"
      - "PORT=3000"
      - "APP_FQDN=${APP_FQDN:-server1.localhost}"
      - "PATH=$PATH:/DENO_INSTALL_ROOT/bin"
    expose:
      - 3000
    volumes:
      - deno:/deno
      - ./server/server.ts:/app/server/server.ts
      - ./client/src:/app/client/src
    logging:
      driver: ${LOGGING_SERVER:-local}
    labels:
      - traefik.enable=true
      - traefik.http.routers.app.tls=true
      - traefik.http.routers.app.rule=Host("${APP_FQDN:-server1.localhost}")

  client:
    build:
      context: ./client
      # dockerfile: Dockerfile
    command: just dev
    working_dir: /app/client
    healthcheck:
      test: curl --fail http://localhost:3000/healthz || exit 1
      interval: 5s
      timeout: 1s
    environment:
      - "APP_PORT_BROWSER=4440"
      - "APP_FQDN=${APP_FQDN:-server1.localhost}"
      - BASE=editor
    expose:
      - 4440
    volumes:
      - node_modules:/app/client/node_modules
      - ./client/dist:/app/client/dist
      - ./client/public:/app/client/public
      - ./client/src:/app/client/src
      - ./client/index.html:/app/client/index.html
      - ./client/justfile:/app/client/justfile
      - ./client/package.json:/app/client/package.json
      - ./client/package-lock.json:/app/client/package-lock.json
      - ./client/tsconfig.json:/app/client/tsconfig.json
      - ./client/vite.config.ts:/app/client/vite.config.ts
      - ./.git:/app/.git
    logging:
      driver: ${LOGGING_SERVER:-local}
    labels:
      - traefik.enable=true
      - traefik.http.routers.app.tls=true
      - traefik.http.routers.app.rule=Host("${APP_FQDN:-server1.localhost}") && PathPrefix(`/editor`)

  traefik:
    image: "traefik:v2.10.4"
    container_name: "traefik-connect-metaframe-pyiodide"
    labels:
     - "traefik.enable=true"
     - "traefik.http.routers.traefik=true"
    ports:
      # HTTPS / SSL port
      - "${APP_PORT:-443}:443"
      # The Traefik Web UI port (enabled by api:insecure: true in traefik.yml)
      - "${TRAEFIK_WEB_UI_PORT:-8080}:8080"
    volumes:
     - ./.traefik/traefik.yml:/etc/traefik/traefik.yml:ro
     - ./.traefik/config.yml:/etc/traefik/config.yml:ro
     - ./.traefik/certs:/etc/certs:ro
     - /var/run/docker.sock:/var/run/docker.sock:ro








  # server:
    # build:
    #   context: server
    # healthcheck:
    #   test: curl --fail http://localhost:8000/healthz || exit 1
    #   interval: 5s
    #   timeout: 1s
    # environment:
    #   - "DENO_DIR=/root/.cache/deno"
    # command: deno run --watch --allow-net server.ts
    # volumes:
    #   - deno:/root/.cache/deno
    #   - ./server/justfile:/app/server/justfile
    #   - ./server/server.ts:/app/server/server.ts
    #   - ./client/src:/app/client/src
    # logging:
    #   driver: ${LOGGING_SERVER:-local}
    # networks:
    #   - default

  # client:
  #   build:
  #     context: client
  #   environment:
  #     - "APP_PORT_BROWSER=${APP_PORT_BROWSER:-4440}"
  #     - "APP_FQDN=${APP_FQDN:-server1.localhost}"
  #     - "APP_PORT=${APP_PORT:-4430}"
  #     # - "SERVER_ORIGIN=${APP_FQDN:-server1.localhost}:${APP_PORT:-4430}"
  #   command: just dev ${APP_FQDN:-server1.localhost}:${APP_PORT:-4430}
  #   volumes:
  #     - node_modules:/app/client/node_modules
  #     - ./ingress/conf.d/certs:/app/.certs
  #     - ./client/index.html:/app/client/index.html
  #     - ./client/justfile:/app/client/justfile
  #     - ./client/package-lock.json:/app/client/package-lock.json
  #     - ./client/package.json:/app/client/package.json
  #     - ./client/public:/app/client/public
  #     - ./client/src:/app/client/src
  #     - ./client/tsconfig.json:/app/client/tsconfig.json
  #     - ./client/vite.config.ts:/app/client/vite.config.ts
  #     - .git:/app/.git
  #   logging:
  #     driver: ${LOGGING_CLIENT:-local}
  #   ports:
  #     - "${APP_PORT_BROWSER:-4440}:${APP_PORT_BROWSER:-4440}"

volumes:
  deno:
    driver: local
  node_modules:
    driver: local


